# /home/jquinter/todo-list-docker-compose/cloudbuild.yaml

# This Cloud Build pipeline is designed to test, build, and publish Docker images
# for the todo-list application. It is intended to be triggered by a git tag push.

steps:
  # Step 1: Run Frontend Tests
  - name: 'gcr.io/cloud-builders/npm'
    dir: 'frontend' # Change directory to the frontend application
    entrypoint: 'bash'
    args: ['-c', 'npm install && npm cache clean --force'] # Clean cache to avoid issues with subsequent builds
  - name: 'gcr.io/cloud-builders/npm'
    id: 'Run Frontend Tests'
    dir: 'frontend' # Change directory to the frontend application
    entrypoint: 'npm'
    args: ['run', 'test:unit', '--', '--watchAll=false', '--ci', '--coverage'] # Add --ci and --coverage for CI environments

  # Step 2: Build the Frontend Docker image
  # This step builds the production frontend image, passing the production API URL
  # as a build argument. It is also tagged with the git tag and 'latest'.
  # It also waits for the tests to complete successfully.
  - name: 'gcr.io/cloud-builders/docker'
    id: 'Build Frontend Image'
    args:
      - 'build'
      # The frontend now calls its own /api endpoint, which is proxied by its Express server.
      - '--build-arg=VUE_APP_API_URL=/api'
      # The port the new Node.js server will listen on inside the container.
      - '--tag'
      - 'gcr.io/$PROJECT_ID/${_FRONTEND_SERVICE_NAME}:${TAG_NAME}'
      - '--tag'
      - 'gcr.io/$PROJECT_ID/${_FRONTEND_SERVICE_NAME}:latest'
      - 'frontend' # Use 'frontend' as the context path relative to the build root
    waitFor: ['Run Frontend Tests']

  # Step 3: Push the Frontend Docker image to GCR
  # We explicitly push the image with the git tag here so it's available for the deployment step.
  - name: 'gcr.io/cloud-builders/docker'
    id: 'Push Frontend Image'
    args: ['push', 'gcr.io/$PROJECT_ID/${_FRONTEND_SERVICE_NAME}:$TAG_NAME']
    waitFor: ['Build Frontend Image']

  # Step 4: Push the 'latest' tag to GCR
  # Pushing the 'latest' tag is also done explicitly.
  - name: 'gcr.io/cloud-builders/docker'
    id: 'Push Latest Tag'
    args: ['push', 'gcr.io/$PROJECT_ID/${_FRONTEND_SERVICE_NAME}:latest']
    waitFor: ['Build Frontend Image']

  # Step 5: Deploy Frontend Service to Cloud Run
  # This step deploys the frontend service, which serves the user interface.
  # It depends on the backend being available at the URL provided in _VUE_APP_API_URL.
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    id: 'Deploy Frontend'
    entrypoint: gcloud
    args:
      - 'run'
      - 'deploy'
      - '${_FRONTEND_SERVICE_NAME}'
      - '--image'
      - 'gcr.io/$PROJECT_ID/${_FRONTEND_SERVICE_NAME}:$TAG_NAME'
      - '--region'
      - '${_CLOUD_RUN_REGION}'
      - '--port'
      - '${_CLOUD_RUN_PORT}'
      - '--platform'
      - 'managed'
      - '--no-allow-unauthenticated'
      - '--set-env-vars=BACKEND_URL=${_BACKEND_URL}'
      - '--service-account'
      - '${_SERVICE_ACCOUNT_NAME}@${PROJECT_ID}.iam.gserviceaccount.com'

# The 'images' section is no longer needed because we are explicitly pushing
# the images in the steps above. This makes the pipeline flow clearer and
# ensures the image is available for the deploy step.
# images:
#   - 'gcr.io/$PROJECT_ID/${_FRONTEND_SERVICE_NAME}:$TAG_NAME'
#   - 'gcr.io/$PROJECT_ID/${_FRONTEND_SERVICE_NAME}:latest'

# Define substitutions. You must replace the placeholder with your actual production URL.
substitutions:
  _CLOUD_RUN_REGION: 'us-central1' # Default region, can be overridden
  _FRONTEND_SERVICE_NAME: 'service-name'
  _CLOUD_RUN_PORT: '8080' # Default port, can be overridden
  _SERVICE_ACCOUNT_NAME: 'cloud-build-custom-sa'
  _BACKEND_URL: 'https://todo-backend-p4e5pamr7q-uc.a.run.app'

logsBucket: 'gs://scotiabank-2025-scl-101-custom-build-logs' # Replace with your actual bucket name  
#serviceAccount: 'projects/scotiabank-2025-scl-101-custom/serviceAccounts/cloud-build-custom-sa@scotiabank-2025-scl-101-custom.iam.gserviceaccount.com' # Replace with your SA
serviceAccount: 'projects/${PROJECT_ID}/serviceAccounts/${_SERVICE_ACCOUNT_NAME}@${PROJECT_ID}.iam.gserviceaccount.com' # Replace with your SA
